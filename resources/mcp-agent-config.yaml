# MCP Agent Configuration
# Defines multiple AI agents for the workshop

agents:
  # Code Review Agent
  code_reviewer:
    name: "AI Code Reviewer"
    description: "Performs comprehensive code reviews"
    capabilities:
      - code_quality_analysis
      - security_vulnerability_detection
      - performance_optimization_suggestions
      - best_practices_validation
    tools:
      - code_review
      - security_scan
    configuration:
      review_depth: comprehensive
      languages:
        - javascript
        - typescript
        - python
        - java
        - csharp
      rules:
        - eslint
        - sonarqube
        - owasp
    triggers:
      - event: pull_request
        action: automatic_review
      - event: commit
        branch_pattern: "feature/*"
        action: incremental_review

  # Test Generation Agent
  test_generator:
    name: "AI Test Generator"
    description: "Generates comprehensive test suites"
    capabilities:
      - unit_test_generation
      - integration_test_generation
      - edge_case_identification
      - test_coverage_analysis
    tools:
      - generate_tests
    configuration:
      frameworks:
        javascript: jest
        typescript: jest
        python: pytest
        java: junit
        csharp: nunit
      coverage_target: 80
      test_types:
        - unit
        - integration
        - edge_cases
        - performance
    triggers:
      - event: new_function
        action: generate_unit_tests
      - event: api_change
        action: update_integration_tests

  # Documentation Agent
  documentation_generator:
    name: "AI Documentation Generator"
    description: "Creates and maintains project documentation"
    capabilities:
      - api_documentation
      - code_documentation
      - architecture_diagrams
      - user_guides
    tools:
      - generate_documentation
    configuration:
      output_formats:
        - markdown
        - html
        - pdf
      documentation_types:
        - api_reference
        - developer_guide
        - user_manual
        - architecture_docs
      auto_update: true
    triggers:
      - event: code_change
        action: update_docs
      - event: release
        action: generate_full_docs

  # Security Scanner Agent
  security_scanner:
    name: "AI Security Scanner"
    description: "Continuous security vulnerability scanning"
    capabilities:
      - static_analysis
      - dependency_scanning
      - secret_detection
      - compliance_checking
    tools:
      - security_scan
    configuration:
      scan_types:
        - SAST
        - dependency_check
        - secret_scan
        - license_compliance
      severity_threshold: medium
      compliance_standards:
        - OWASP
        - PCI-DSS
        - GDPR
      auto_fix: true
    triggers:
      - event: pre_commit
        action: quick_scan
      - event: pull_request
        action: full_scan
      - schedule: "0 2 * * *"  # Daily at 2 AM
        action: deep_scan

  # Performance Optimizer Agent
  performance_optimizer:
    name: "AI Performance Optimizer"
    description: "Identifies and fixes performance bottlenecks"
    capabilities:
      - code_profiling
      - bottleneck_identification
      - optimization_suggestions
      - benchmark_generation
    tools:
      - optimize_code
    configuration:
      optimization_targets:
        - execution_speed
        - memory_usage
        - network_efficiency
        - database_queries
      profiling_tools:
        - chrome_devtools
        - py_spy
        - java_flight_recorder
      benchmark_frameworks:
        - jest_bench
        - pytest_benchmark
        - jmh
    triggers:
      - event: performance_regression
        threshold: 10  # 10% regression
        action: analyze_and_optimize

  # DevOps Agent
  devops_orchestrator:
    name: "AI DevOps Orchestrator"
    description: "Manages CI/CD pipeline and deployments"
    capabilities:
      - pipeline_optimization
      - deployment_strategy
      - rollback_decisions
      - resource_scaling
    tools:
      - all  # Access to all tools
    configuration:
      ci_cd_platforms:
        - github_actions
        - azure_devops
        - jenkins
      deployment_strategies:
        - blue_green
        - canary
        - rolling_update
      monitoring_integration:
        - prometheus
        - application_insights
        - datadog
      auto_scaling:
        enabled: true
        min_instances: 2
        max_instances: 20
        scale_metrics:
          - cpu_usage
          - memory_usage
          - request_rate
    triggers:
      - event: build_failure
        action: diagnose_and_fix
      - event: deployment_issue
        action: rollback_decision
      - event: high_load
        action: scale_resources

# Agent Orchestration Rules
orchestration:
  workflows:
    - name: "Pull Request Review"
      description: "Comprehensive PR review workflow"
      steps:
        - agent: code_reviewer
          action: review_changes
          output: review_report
        - agent: test_generator
          action: generate_missing_tests
          input: review_report
        - agent: security_scanner
          action: scan_changes
          parallel: true
        - agent: documentation_generator
          action: update_docs
          condition: "changes_include_api"
      
    - name: "Release Preparation"
      description: "Prepare for production release"
      steps:
        - agent: security_scanner
          action: full_security_audit
          blocking: true
        - agent: performance_optimizer
          action: performance_baseline
        - agent: test_generator
          action: regression_tests
        - agent: documentation_generator
          action: generate_release_notes
        - agent: devops_orchestrator
          action: prepare_deployment

  communication:
    channels:
      - type: webhook
        url: "${WEBHOOK_URL}"
        events:
          - critical_vulnerability
          - build_failure
          - deployment_complete
      - type: email
        recipients:
          - team@example.com
        events:
          - weekly_summary
          - security_report
      - type: slack
        webhook: "${SLACK_WEBHOOK}"
        channel: "#ai-agents"
        events:
          - all

  resource_limits:
    max_concurrent_agents: 5
    agent_timeout: 300  # seconds
    retry_attempts: 3
    memory_limit: "2Gi"
    cpu_limit: "2000m"

# Agent Learning Configuration
learning:
  feedback_collection:
    enabled: true
    storage: "azure_blob"
    retention_days: 90
  
  model_updates:
    frequency: weekly
    approval_required: true
    rollback_enabled: true
  
  performance_metrics:
    - accuracy
    - false_positive_rate
    - execution_time
    - resource_usage 